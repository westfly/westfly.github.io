<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>远志麒</title>
    <link>http://westfly.github.io/</link>
    <description>Recent content on 远志麒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 30 Nov 2019 21:34:58 +0800</lastBuildDate>
    
        <atom:link href="http://westfly.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://westfly.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://westfly.github.io/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>利用Github搭建技术Blog</title>
      <link>http://westfly.github.io/post/blog/how-to-deply-blog-on-github/</link>
      <pubDate>Sat, 30 Nov 2019 21:34:58 +0800</pubDate>
      
      <guid>http://westfly.github.io/post/blog/how-to-deply-blog-on-github/</guid>
      
        <description>&lt;h2 id=&#34;heading&#34;&gt;起始&lt;/h2&gt;
&lt;p&gt;学习和总结是技术路线上必经之路，以前在&lt;a href=&#34;https://westfly.cnblogs.com/&#34;&gt;cnblogs&lt;/a&gt;上写Blog，后来因为各种缘由更新不是合适很及时。&lt;/p&gt;
&lt;p&gt;后来习惯了用 markdown 写日志、写周报，有些总结笔记也迁移到markdown上了，但多是写给自己的。所谓如果技术不发表，也就少了些许意义。&lt;/p&gt;
&lt;p&gt;当前搭建一个Blog也无须自己申请一个域名，借用伟大的 &lt;a href=&#34;https://github.com&#34;&gt;github&lt;/a&gt;，我们可以搭建自己的技术博客，而且还有多种风格供选择。&lt;/p&gt;
&lt;h2 id=&#34;heading1&#34;&gt;实战&lt;/h2&gt;
&lt;h3 id=&#34;-repo&#34;&gt;建立 Repo&lt;/h3&gt;
&lt;p&gt;申请github账号，配置ssh登陆环境，不在本文的讨论之列，请参考其它资料。&lt;/p&gt;
&lt;p&gt;我们需要在github上建立两个Repo：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BlogRepo 存放 Blog 的配置&lt;/li&gt;
&lt;li&gt;PageRepo 存放 Hugo public 生成的静态页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PageRepo 可以作为 BlogRepo的一个子模块存在，通过 git 修改BlogRepo 即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 添加主题&lt;/span&gt;
git submodule add -b master https://github.com/xianmin/hugo-theme-jane.git themes/jane
&lt;span style=&#34;color:#75715e&#34;&gt;#替换为你的repo名&lt;/span&gt;
git submodule add -b master git@github.com:westfly/westfly.github.io.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如上的 hugo-theme-jane 是 一个&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo试试&lt;/a&gt;主题，可以在&lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;官方皮肤列表&lt;/a&gt;
中选择一个自己喜欢的。&lt;/p&gt;
&lt;h3 id=&#34;-hugo&#34;&gt;安装 Hugo&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; 是一个用Go语言编写的静态网站生成器，它使用起来非常简单。&lt;/p&gt;
&lt;p&gt;通过 hugo server 命令在本地启动 HTTP服务。
服务自带的Watch模式，能够自动检测Markdown的更改并刷新，达到实时预览的效果，极大的提高博客书写效率。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Hugo 的安装有多种方式&lt;/a&gt;，本文采用的是下载Hugo最新的&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;二进制版本&lt;/a&gt;（当然有余力的同学也可以从source开始编译），然后将其加入的系统的 PATH中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mac&lt;/span&gt;
brew install hugo
&lt;span style=&#34;color:#75715e&#34;&gt;#ubuntu&lt;/span&gt;
sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;hugo的使用只需要如下几个命令即可，具体的使用方式参考&lt;a href=&#34;https://gohugo.io/overview/introduction/&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 在本地新建一个站点，如果不为空 提示用force&lt;/span&gt;
hugo new site . --force 
&lt;span style=&#34;color:#75715e&#34;&gt;# 新建一个一篇博文&lt;/span&gt;
hugo new post/how-to-deply-blog-on-github.md
&lt;span style=&#34;color:#75715e&#34;&gt;# 启动HTTP服务实时预览&lt;/span&gt;
hugo server --buildDrafts --watch
&lt;span style=&#34;color:#75715e&#34;&gt;# 生成静态页面到 public&lt;/span&gt;
hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;hugo hugo new site会自动生成这样一个目录结构：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;  ▸ archetypes/
  ▸ content/
    config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以将这些添加到 BlogRepo 中去，在content/post下可以写markdown文件，同时&lt;/p&gt;
&lt;p&gt;post 下支持按照目录进行分类&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;arch
cpplang
golang
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;heading2&#34;&gt;配置&lt;/h3&gt;
&lt;p&gt;Hugo的默认配置文件是config.toml，可以将config.toml从 主题Jane中拷贝出来，修改为你自己的信息，最重要的是修改baseURL，可以定向到自己domain，基于github.io 的话就应该是这样的https://westfly.github.io 。&lt;/p&gt;
&lt;p&gt;配置项都有注释，请酌情修改即可。&lt;/p&gt;
&lt;h3 id=&#34;heading3&#34;&gt;发布&lt;/h3&gt;
&lt;p&gt;如果本地预览成功了，就可以发布到github上了。
这里需要注意将markdown的draft 修改为 false，否则不会发表。
通过如下&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script&#34;&gt;脚本&lt;/a&gt;可以一次性提交Repo。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $# -lt  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;lt;commit message&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
msg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$msg&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Commit failed&amp;#34;&lt;/span&gt;
    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
git push origin master
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Push failed&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Build the project.&lt;/span&gt;
hugo &lt;span style=&#34;color:#75715e&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Go To Public folder&lt;/span&gt;
cd public
&lt;span style=&#34;color:#75715e&#34;&gt;# Add changes to git.&lt;/span&gt;
git add .
&lt;span style=&#34;color:#75715e&#34;&gt;# Commit changes.&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$msg&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Push source and build repos.&lt;/span&gt;
git push origin master
&lt;span style=&#34;color:#75715e&#34;&gt;# Come Back up to the Project Root&lt;/span&gt;
cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading4&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.coderzh.com/2015/08/29/hugo/&#34;&gt;使用hugo搭建个人博客站点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://keysaim.github.io/post/blog/deploy-hugo-blog-in-github.io/&#34;&gt;如何在github.io搭建Hugo博客站&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
